terraform {
  required_providers {
    google = {
      source  = "hashicorp/google"
      version = "6.48.0"
    }
  }
}

provider "google" {
    project     = "testjune13-462806"                
    region      = "europe-southwest1"
    zone        = "europe-southwest1-a"
    credentials = "sa.json"
}
resource "google_storage_bucket" "example1" {
    name = "bucket-from-tf-shruti-taki"
    location = "europe-southwest1"
}


terraform {
  backend "gcs" {
    bucket = "bucket-lourde-new"   # same name you created above
    prefix = "terraform/state"
    credentials = "sa.json"

  }
}
# Create a VPC network 
resource "google_compute_network" "my_network" { 
    name = "my-network-lourde" 
    auto_create_subnetworks = false 
}
#Create a subnet within the VPC network 
resource "google_compute_subnetwork" "my_subnet" {
     name = "my-subnet-lourde" 
     ip_cidr_range = "10.0.0.0/16" 
     network = google_compute_network.my_network.id 
     region = "us-central1" 
}
# Create a public IP address
 resource "google_compute_address" "my_public_ip" {
     name = "my-public-ip-lourde" 
     address_type = "EXTERNAL" 
     region = "us-central1" 
} 
# Create a network interface with an external IP 
resource "google_compute_instance" "my_instance" { 
    name = "my-instance-lourde" 
    machine_type = "n2-standard-2" 
    zone = "us-central1-a" 
    boot_disk { 
        initialize_params { 
            image = "centos-cloud/centos-stream-9" 
            labels = { 
                my_label = "edrt" 
            } 
        }
} 
network_interface { 
    network = google_compute_network.my_network.self_link 
    subnetwork = google_compute_subnetwork.my_subnet.self_link 
    access_config { 
        nat_ip = google_compute_address.my_public_ip.address 
    } 
  } 
}
output "instance_public_ip" {
  description = "The public IP address of the compute instance"
  value       = google_compute_instance.my_instance.network_interface[0].access_config[0].nat_ip
}
